#!/bin/bash


ipt='/sbin/iptables'
# limpio reglas 

echo "FLUSH"
$ipt -F
$ipt -t nat -F
echo "POLITICA GRAL. CERRAMOS TODO. DEJAMOS ENTRAR y SALIR LO SOLICITADO"
$ipt -P INPUT DROP
$ipt -P OUTPUT ACCEPT
$ipt -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
$ipt -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

# filtro todos los puertos hasta el 10240
echo "DROP"
$ipt -A INPUT -p tcp --dport 21 -j REJECT
$ipt -A INPUT -p udp --dport 21 -j REJECT
$ipt -A INPUT -p tcp --dport 23 -j REJECT
$ipt -A INPUT -p udp --dport 23 -j REJECT
$ipt -A INPUT -p tcp --dport 25 -j REJECT
$ipt -A INPUT -p udp --dport 25 -j REJECT
$ipt -A INPUT -p tcp --dport 81 -j REJECT
$ipt -A INPUT -p udp --dport 81 -j REJECT
$ipt -A INPUT -p tcp --dport 111 -j REJECT
$ipt -A INPUT -p udp --dport 111 -j REJECT
$ipt -A INPUT -p tcp --dport 179 -j REJECT
$ipt -A INPUT -p udp --dport 179 -j REJECT
$ipt -A INPUT -p tcp --dport 554 -j REJECT
$ipt -A INPUT -p udp --dport 554 -j REJECT
$ipt -A INPUT -p tcp --dport 1720 -j REJECT
$ipt -A INPUT -p udp --dport 1720 -j REJECT
$ipt -A INPUT -p tcp --dport 1755 -j REJECT
$ipt -A INPUT -p udp --dport 1755 -j REJECT
$ipt -A INPUT -p tcp --dport 1194 -j REJECT
$ipt -A INPUT -p udp --dport 1194 -j REJECT
$ipt -A INPUT -p tcp --dport 5389 -j REJECT
$ipt -A INPUT -p udp --dport 5389 -j REJECT
$ipt -A INPUT -p tcp --dport 8080 -j REJECT
$ipt -A INPUT -p udp --dport 8080 -j REJECT
$ipt -A INPUT -p tcp --dport 1:10240 -j DROP
$ipt -A INPUT -p udp --dport 1:10240 -j DROP


echo "PROTECCIONES"
#echo "FUCK PING & SMURF ATTACK"
#$ipt -A INPUT -p icmp -i eth1 -j LOG -m limit --log-prefix "iptables ping: "
#echo "1" > /proc/sys/net/ipv4/icmp_echo_ignore_all

echo "FUCK BROADCAST & SMURF ATTACK"
echo "1" > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts

echo "FUCK SPOOFING"
# Para evitar el spoofing nos aseguramos de que la direcciÃ³n
# origen del paquete viene del sitio correcto."
for interface in /proc/sys/net/ipv4/conf/*/rp_filter; do
	echo "1" > ${interface}
done

# Los ICMPs redirigidos que pueden alterar la tabla de rutas.
for interface in /proc/sys/net/ipv4/conf/*/accept_redirects; do
	echo "0" > ${interface}
done

# No guardamos registros de los marcianos
echo "0" > /proc/sys/net/ipv4/conf/all/log_martians

echo "FUCK CHICOS PILLOS y NMAP"
$ipt -A INPUT -m recent --rcheck --seconds 60 -m limit --limit 10/second -j LOG --log-prefix "iptables Pillos "
$ipt -A INPUT -m recent --update --seconds 60 -j DROP
$ipt -t filter -A INPUT -p tcp --tcp-flags ACK,FIN FIN -j LOG --log-prefix "iptables FIN: "
$ipt -t filter -A INPUT -p tcp --tcp-flags ACK,FIN FIN -j DROP
$ipt -t filter -A INPUT -p tcp --tcp-flags ACK,PSH PSH -j LOG --log-prefix "iptables PSH: "
$ipt -t filter -A INPUT -p tcp --tcp-flags ACK,PSH PSH -j DROP
$ipt -t filter -A INPUT -p tcp --tcp-flags ACK,URG URG -j LOG --log-prefix "iptables URG: "
$ipt -t filter -A INPUT -p tcp --tcp-flags ACK,URG URG -j DROP
$ipt -t filter -A INPUT -p tcp --tcp-flags ALL ALL -j LOG --log-prefix "iptables XMAS scan: "
$ipt -t filter -A INPUT -p tcp --tcp-flags ALL ALL -j DROP
$ipt -t filter -A INPUT -p tcp --tcp-flags ALL NONE -j LOG --log-prefix "iptables NULL scan: "
$ipt -t filter -A INPUT -p tcp --tcp-flags ALL NONE -j DROP
$ipt -t filter -A INPUT -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j LOG --log-prefix "iptables pscan: "
$ipt -t filter -A INPUT -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j DROP
$ipt -t filter -A INPUT -p tcp --tcp-flags SYN,FIN SYN,FIN -j LOG --log-prefix "iptables pscan 2: "
$ipt -t filter -A INPUT -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP
$ipt -t filter -A INPUT -p tcp --tcp-flags FIN,RST FIN,RST -j LOG --log-prefix "iptables pscan 2: "
$ipt -t filter -A INPUT -p tcp --tcp-flags FIN,RST FIN,RST -j DROP
$ipt -t filter -A INPUT -p tcp --tcp-flags ALL SYN,FIN -j LOG --log-prefix "iptables SYNFIN-SCAN: "
$ipt -t filter -A INPUT -p tcp --tcp-flags ALL SYN,FIN -j DROP
$ipt -t filter -A INPUT -p tcp --tcp-flags ALL URG,PSH,FIN -j LOG --log-prefix "iptables NMAP-XMAS-SCAN: "
$ipt -t filter -A INPUT -p tcp --tcp-flags ALL URG,PSH,FIN -j DROP
$ipt -t filter -A INPUT -p tcp --tcp-flags ALL FIN -j LOG --log-prefix "iptables FIN-SCAN: "
$ipt -t filter -A INPUT -p tcp --tcp-flags ALL FIN -j DROP
$ipt -t filter -A INPUT -p tcp --tcp-flags ALL URG,PSH,SYN,FIN -j LOG --log-prefix "iptables NMAP-ID: "
$ipt -t filter -A INPUT -p tcp --tcp-flags ALL URG,PSH,SYN,FIN -j DROP
$ipt -t filter -A INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j LOG --log-prefix "iptables SYN-RST: "
# Drop all null packets
$ipt -A INPUT -p tcp --tcp-flags ALL NONE -j DROP

echo "LOCALHOST OK"
$ipt -A INPUT -i lo -j ACCEPT

$ipt -I INPUT -i eth0 -p icmp --icmp-type 8 -j ACCEPT
$ipt -I INPUT -i eth1 -p icmp --icmp-type 8 -j ACCEPT

## Permitimos que la maquina pueda salir a la web
## $ipt -A INPUT -p tcp -m tcp --sport 80 -m state --state RELATED,ESTABLISHED -j ACCEPT
## $ipt -A OUTPUT -p tcp -m tcp --dport 80 -j ACCEPT

#echo "NFQUEUE"
#$ipt -A FORWARD -j NFQUEUE --queue-num 0
#$ipt -A INPUT -j NFQUEUE
#$ipt -A OUTPUT -j NFQUEUE
#$ipt -A FORWARD -j NFQUEUE

echo "HABILITAMOS RANGO DE PUERTOS"
# habilito acceso
# $ipt -I INPUT -s 192.168.0.0/16 -j ACCEPT

$ipt -I INPUT -p tcp --dport 22  -j ACCEPT
$ipt -I INPUT -p udp --dport 22  -j ACCEPT
$ipt -I INPUT -p tcp --dport 80 -j ACCEPT
$ipt -I INPUT -p udp --dport 80 -j ACCEPT
$ipt -I INPUT -p tcp --dport 443 -j ACCEPT
$ipt -I INPUT -p udp --dport 443 -j ACCEPT
$ipt -I INPUT -p tcp --dport 3306 -j ACCEPT
$ipt -I INPUT -p udp --dport 3306 -j ACCEPT
$ipt -I INPUT -p tcp --dport 5666 -j ACCEPT
$ipt -I INPUT -p udp --dport 5666 -j ACCEPT

#$ipt -I INPUT -i eth1 -p tcp --dport 443 -j ACCEPT
#$ipt -I INPUT -i eth1 -p udp --dport 443 -j ACCEPT

# Para habilitar log
#$ipt -A INPUT -j LOG --log-prefix "iptables-input"
#$ipt -A OUTPUT -j LOG --log-prefix "iptables-output"
#$ipt -A FORWARD -j LOG --log-prefix "iptables-forward"

ipsetfw=`ipset list | grep Name | wc -l`
if test $ipsetfw = "0" ; then

BLOCKDB="block.txt"
WORKDIR="/tmp"
pwd=$(pwd)
cd $WORKDIR
#List of ips to block
ipset --create blackips iphash
## Obtain List of badguys from openbl.org
wget -q -c --output-document=$BLOCKDB http://www.openbl.org/lists/base.txt
if [ -f $BLOCKDB ]; then
    IPList=$(grep -Ev "^#" $BLOCKDB | sort -u)
    for i in $IPList
    do
        ipset --add blackips $i
    done
fi
rm $BLOCKDB
## Obtain List of badguys from ciarmy.com
wget -q -c --output-document=$BLOCKDB http://www.ciarmy.com/list/ci-badguys.txt
if [ -f $BLOCKDB ]; then
    IPList=$(grep -Ev "^#" $BLOCKDB | sort -u)
    for i in $IPList
    do
        ipset --add blackips $i
    done
fi
rm $BLOCKDB
## Obtain List of badguys from dshield.org
wget -q -c --output-document=$BLOCKDB http://feeds.dshield.org/top10-2.txt
if [ -f $BLOCKDB ]; then
    IPList=$(grep -E "^[1-9]" $BLOCKDB | cut -f1 | sort -u)
    for i in $IPList
    do
        ipset --add blackips $i
    done
fi
rm $BLOCKDB
#List of networks to block
ipset --create blacknets nethash
## Obtain List of badguys from dshield.org
wget -q -c --output-document=$BLOCKDB http://feeds.dshield.org/block.txt
if [ -f $BLOCKDB ]; then
    IPList=$(grep -E "^[1-9]" $BLOCKDB | cut -f1,3 | sed "s/\t/\//g" | sort -u)
    for i in $IPList
    do
        ipset --add blacknets $i
    done
fi
rm $BLOCKDB
## Obtain List of badguys from spamhaus.org
    wget -q -c --output-document=$BLOCKDB http://www.spamhaus.org/drop/drop.lasso
    if [ -f $BLOCKDB ]; then
      IPList=$(grep -E "^[1-9]" $BLOCKDB | cut -d" " -f1 | sort -u)
      for i in $IPList
      do
        ipset --add blacknets $i
      done
    fi
    rm $BLOCKDB
#Drop blacklisted ips
iptables -A FORWARD -m set --match-set blackips src -j DROP
iptables -A FORWARD -m set --match-set blacknets src -j DROP
cd $pwd
else
echo "IPSET OK!"
fi

